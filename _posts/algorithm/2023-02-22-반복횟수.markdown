---
layout: post
title: "반복횟수 출력1"
date: 2023-02-22 18:43:32 +0900
author: Jeffrey
categories: Algorithm
---

0 ~ 99 사이의 어떤 수를 입력받아서, 다음과 같은 동작을 수행하기로 한다.
a. 주어진 수가 1자리 숫자면 앞에 0 을 붙여서 어쨌든 2자리로 만든다.
b. 두 자리의 숫자를 더해서 얻어진 새로운 수를 s 라고 부르자.
c. 처음 주어진 수의 오른쪽자리수에 s의 오른쪽자리수를 나란히 붙여서 새로운 2자리 숫자를 만든다.

원래숫자 = 26, s = 08, 새로 만들어진 수는 = 68
원래숫자 = 68, s = 14, 새로 만들어진 수는 = 84
원래숫자 = 84, s = 12, 새로 만들어진 수는 = 42
원래숫자 = 42, s = 06, 새로 만들어진 수는 = 26

사용자로부터 0 ~ 99 사이의 숫자를 하나 입력받아서, 위의 절차를 몇번 반복해야 처음 숫자가 도출되는지 그 반복횟수를 출력하세요.

ex) 26 => 4

**a. 주어진 수가 1자리 숫자면 앞에 0 을 붙여서 어쨌든 2자리로 만든다.**

```jsx
let 어떤수 = 26;
let 비교를위해담아둘수;

비교를위해담아둘수 = 어떤수.toString();

if (비교를위해담아둘수.length == "1") 비교를위해담아둘수 = "0" + 비교를위해담아둘수;
```

**b. 두 자리수를 더해서 새로운 수를 만든다**

```jsx
let 새로운수;

새로운수 = parseInt(비교를위해담아둘수.substr(0, 1)) + parseInt(비교를위해담아둘수.substr(1, 1));
새로운수 = 새로운수.toString();
if (새로운수.length == "1") 새로운수 = "0" + 새로운수;
```

**c. 처음 주어진 수의 오른쪽자리수에 s의 오른쪽자리수를 나란히 붙여서 새로운 2자리 숫자를 만든다.**

```jsx
let 새로운두자리수;

새로운두자리수 = 비교를위해담아둘수.substr(1, 1) + 새로운수.substr(1, 1);
```

**위의 절차를 몇 번 반복해야 처음 숫자가 도출되는지 그 반복 횟수를 출력하세요.**

```jsx
let count = 0;

while (true) {

  if (비교를위해담아둘수.length == '1') 비교를위해담아둘수 = '0' + 비교를위해담아둘수;

  새로운수 = parseInt(비교를위해담아둘수.substr(0, 1)) + parseInt(비교를위해담아둘수.substr(1, 1));
  새로운수 = 새로운수.toString();
  if (새로운수.length == '1') 새로운수 = '0' + 새로운수;
  새로운두자리수 = 비교를위해담아둘수.substr(1, 1) + 새로운수.substr(1, 1)

  count += 1;

  비교를위해담아둘수 = 새로운두자리수;
  비교를위해담아둘수 = 비교를위해담아둘수.toString();

  if (어떤수 == 새로운두자리수) {
    console.log(새로운두자리수);
    break;
  }
}

console.log(`반복 횟수는 ${count} 입니다. `)
```